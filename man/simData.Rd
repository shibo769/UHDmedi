% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simData.R
\name{simData}
\alias{simData}
\title{Simulate High-Dimensional Mediation Data}
\usage{
simData(
  nn = 100,
  p = 200,
  q = 200,
  variance = 1,
  k1 = 3,
  k2 = 3,
  s_X = 3,
  categorical = FALSE
)
}
\arguments{
\item{nn}{Integer. Number of samples (default = 100).}

\item{p}{Integer. Number of continuous predictors in X (default = 200).}

\item{q}{Integer. Number of mediators (default = 200).}

\item{variance}{Numeric. Variance of the noise (default = 1).}

\item{k1}{Integer. Sparsity level for beta coefficients (default = 3).}

\item{k2}{Integer. Sparsity level for gamma coefficients (default = 3).}

\item{s_X}{Integer. Number of active indices in each row of the loading matrices B0 and B1 (default = 3).}

\item{categorical}{Logical. If TRUE, extra categorical and binary predictors are added to X (default = FALSE).}
}
\value{
A list containing:
\describe{
  \item{X}{The design matrix of dimension nn x p_total, where p_total = p + p_cat + p_bin if categorical = TRUE, otherwise p_total = p.}
  \item{A}{Treatment assignment vector (binary) of length nn.}
  \item{Y}{Outcome vector of length nn, assembled from treatment and control outcomes.}
  \item{M}{Mediator matrix of dimension nn x q, assembled from treatment and control mediators.}
}
}
\description{
This function simulates data for estimating mediation effects under ultra-high dimensional settings.
It generates a design matrix X, binary treatment assignment A, mediators M, and outcome Y.
In addition to continuous predictors (generated from a normal distribution), the function can add
extra categorical predictors (with levels 1, 2, 3) and binary predictors (0/1) if the argument
\code{categorical = TRUE}. These extra predictors are appended to the continuous ones.
}
\examples{
# Generate simulated data with default parameters (only continuous predictors)
sim_data <- simData(nn = 30, p = 50, q = 20, variance = 0.1, k1 = 3, k2 = 6, s_X = 3, categorical = TRUE)
str(sim_data)

# Generate simulated data with extra categorical and binary predictors
sim_data2 <- simData(categorical = TRUE)
str(sim_data2)

}
